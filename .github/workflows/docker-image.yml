name: Test - Container Image Build

on:
  push:
    branches: [main,develop]
  pull_request:
    branches: [main,develop]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        run: |
          docker buildx build --push \
            --tag proxy:latest \
            --platform=linux/arm64 . 

      # - name: Build
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     load: true
      #     tags: nginx_proxy:latest
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

      # - name: Test with curl
      #   run: |
      #     set +e
      #     docker images -a
      #     docker run -d --name nginx_proxy nginx_proxy:latest
      #     sleep 5
      #     nginx_proxy_ip=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' nginx_proxy)
      #     err=1
      #     count=0
      #     while [[ $err != 0 ]]; do
      #       curl https://www.google.com -svo /dev/null -x $nginx_proxy_ip:8888
      #       err=$?
      #       [[ $err == 0 ]] && exit 0
      #       count=$(( count + 1 ))
      #       [[ $count -ge 5 ]] && exit 1
      #     done

      # - name: Stop containers and show logs
      #   if: always()
      #   run: |
      #     docker exec -i nginx_proxy cat /var/log/nginx_errors.log || true
      #     docker exec -i nginx_proxy cat /var/log/nginx_access.log || true
      #     docker rm -f nginx_proxy || true
